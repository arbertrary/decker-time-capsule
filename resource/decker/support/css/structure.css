/* This is structurally important CSS that should not contain too many specifics
regarding colors, fonts, sizes and lengths. It is included from deck.css,
page.css and handout.css. */

/* These are just for internal calculations */
:root {
  --list-indent: 1.5em;
  --block-border-width: 0.2em;
  --block-outset: 0.5rem;
}

/* Reset Reveal CSS to sane values */
.reveal .slides {
  text-align: left;
}

/* Box sizing is much nicer for calculations. */
body {
  box-sizing: border-box;
}

/* Allows slide relative positioning of non-immediate children. */
div.alignment {
  display: relative;
}

/* This value depends on the height of the slide that Reveal sets. */
pre {
  max-height: 500px;
}

/* Override Pandoc's setting.  */
.sourceCode {
  overflow: hidden;
}

pre,
pre.sourceCode {
  overflow: scroll;
}

/* Make this behave like a normal pre element. Used for inline code display. */
span.pre {
  display: block;
  max-height: 500px;
  white-space: pre;
  unicode-bidi: embed;
  overflow: scroll;
}
span.pre code {
  white-space: pre;
}

/* Empty headers should not get in the way. */
:is(h1, h2):empty {
  display: none;
}

/* Layout */

/* Old-style row layout (.columns), also MarioCols. */
div.layout.row:is(.columns, .grid) {
  display: flex;
  flex-flow: row nowrap;
}

div.layout.row:is(.columns, .grid) > div.area {
  flex: 1;
  /* Really important to make pre elements work in flex items. */
  min-width: 0;
}

/* Old syntax to control column width. */
div.layout.row:is(.columns, .grid) > div.area[grow="2"] {
  flex: 2;
}

div.layout.row:is(.columns, .grid) > div.area[grow="3"] {
  flex: 3;
}

div.layout.row:is(.columns, .grid) > div.area[grow="4"] {
  flex: 4;
}

div.layout.row:is(.columns, .grid) > div.area[grow="5"] {
  flex: 5;
}

div.layout.row:is(.columns, .grid) > div.area[grow="6"] {
  flex: 6;
}

/* Column spacing in a row */
div.layout.row:is(.columns, .grid) > div.area {
  margin-left: 1rem;
  margin-right: 1rem;
}

div.layout.row:is(.columns, .grid) > div.area:first-child {
  margin-left: 0;
}

div.layout.row:is(.columns, .grid) > div.area:last-child {
  margin-right: 0;
}

/* Blocks have some padding and a border to allow for highlighting without
disturbing the layout. */
div.block {
  padding: var(--block-outset);
  border: var(--block-border-width) solid rgba(0, 0, 0, 0);
}

/* Align headers with blocks. */
h1 {
  padding: 0 var(--block-outset);
}

/* Media elements */
div.media {
  display: flex;
  justify-content: center;
}

/* TODO Check the old class vocabulary for alignment. */
div.media[data-align="left"] {
  justify-content: flex-start;
}

div.media[data-align="right"] {
  justify-content: flex-end;
}

/* Figures can not be used in inline context, using spans instead. */
span.figure,
figure {
  width: 100%;
}

/* Figcaptions can not be used in inline context, using spans instead. */
span.figcaption,
figcaption {
  font-size: 80%;
  font-style: italic;
  text-align: center;

  background-color: var(--c4);
}

/* Inline media blocks are rendered as spans, but use a block context inside. */
span.media {
  display: inline-block;
}

/* Figure spans behave like a block. */
span.figure {
  display: block;
}

/* Figcaption spans behave like a block. */
span.figcaption {
  display: block;
}

/* Get rid of the annoying bottom gap. */
img,
iframe,
video,
object,
canvas,
svg,
pre {
  vertical-align: bottom;
}

/* Default sizes for inline media elements without intrinsic aspect ratio. */
span.figure > :is(span.pre, object, iframe) {
  width: 200px;
  height: 100px;
}

/* Default sizes for block media elements without intrinsic aspect ratio. */
figure > :is(object, iframe) {
  width: 100%;
  height: 400px;
}

/* Default width. Always try to fill the frame. */
figure > :is(pre, img, video, div.sourceCode) {
  width: 100%;
  margin: 0;
}

/* Default width for embedded SVG. */
.svg.embedded svg {
  width: 100%;
  height: auto;
}

/* Makes iframes react fluidly to width changes. The aspect ratio can be set
through the aspect attribute. */
.fluid-iframe {
  position: relative;
  padding-bottom: calc(var(--aspect-ratio, 0.5625) * 100%);
  height: 0;
}

.fluid-iframe iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
